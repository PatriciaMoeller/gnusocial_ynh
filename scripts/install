#!/bin/bash

set -eu

# Get multi-instances specific variables
app=$YNH_APP_INSTANCE_NAME

# Retrieve arguments
nodename=$1
domain=$2
path=$3
admin=$4
profile=$5

# Check if admin exists
#sudo yunohost user list --json | grep -q "\"username\": \"$admin_gs\""
#if [[ ! $? -eq 0 ]]; then
#    echo "Wrong admin"
#    exit 1
#fi

# Set app specific variables
dbname=$app
dbuser=$app

# Source app helpers
. /usr/share/yunohost/helpers

ynh_user_exists "$admin" \
  || ynh_die "The chosen admin user does not exist."
ynh_app_setting_set $app admin_user $admin


#sudo yunohost app setting gnusocial admin -v $admin
#sudo yunohost app setting gnusocial is_public -v $is_public

# Get admin email
admin_mail=$(sudo yunohost user info $admin --json | python -c "import json,sys; print json.load(sys.stdin)['mail']")


# Check domain/path availability
sudo yunohost app checkurl $domain$path -a $app \
  || ynh_die "The path ${domain}${path} is not available for app installation."

#sudo yunohost app checkurl $domain$path -a gnusocial
#if [[ ! $? -eq 0 ]]; then
#    exit 1
#fi

# Generate random password
#db_pwd=$(dd if=/dev/urandom bs=1 count=200 2> /dev/null | tr -c -d '[A-Za-z0-9]' | sed -n 's/\(.\{24\}\).*/\1/p')

# Generate random password
dbpwd=$(ynh_string_random)

# Use 'gnusocial' as database name and user
#db_user=gnusocial

# Initialize database and store mysql password for upgrade
#sudo yunohost app initdb $dbuser -p $dbpwd
#sudo yunohost app setting $app mysqlpwd -v $dbpwd

# Initialize database
ynh_mysql_create_db $dbname $dbuser $dbpwd


# Copy files to the right place
final_path=/var/www/$app
sudo mkdir -p $final_path
sudo cp -a ../sources/. $final_path
sudo cp ../conf/config.php $final_path/config.php

# Change variables in GNU Social configuration
sudo sed -i "s/gs_name/$domain/g" $final_path/config.php
sudo sed -i "s/gs_domain/$domain/g" $final_path/config.php
sudo sed -i "s/yunouser/$dbuser/g" $final_path/config.php
sudo sed -i "s/yunopass/$dbpwd/g" $final_path/config.php
sudo sed -i "s/yunobase/$dbuser/g" $final_path/config.php
sudo sed -i "s/gs_profile/$profile/g" $final_path/config.php

#TODO: LDAP options
#sudo sed -i "s@URLGNUSOCIAL@$domain$path@g" ../conf/*.sql
#sudo sed -i "s/I18NTOCHANGE/$language/g" ../conf/*.sql

# Set permissions to gnusocial directory
sudo chown -R www-data: $final_path

# Modify Nginx configuration file and copy it to Nginx conf directory
sed -i "s@PATHTOCHANGE@$path@g" ../conf/nginx.conf*
sed -i "s@ALIASTOCHANGE@$final_path/@g" ../conf/nginx.conf*
sudo cp ../conf/nginx.conf /etc/nginx/conf.d/$domain.d/gnusocial.conf

# Reload Nginx and regenerate SSOwat conf
sudo service nginx reload
#sudo yunohost app setting $app skipped_uris -v "/"
#sudo yunohost app ssowatconf

# Gnu Social installation
curl -kL -H "Host: $domain" -X POST --data "sitename=$nodename&fancy=enable&ssl=alwaysr&host=locahost&dbtype=mysql&database=$dbuser&dbusername=$dbuser&dbpassword=$dbpwd
&admin_nickname=$admin&admin_password=$dbpwd&admin_password2=$dbpwd&admin_email=$admin_mail&site_profile=$profile&submit=Submit" http://127.0.0.1$path/install.php > /dev/null 2>&1
sleep 5
mysql -u $dbuser -p$dbpwd $dbuser -e "select * from options;" > /dev/null 2>&1
result=$?
loop_number=1
while [ $result != 0 ] && [ $loop_number -lt 5 ];
do
	sleep 5
	mysql -u $dbuser -p$dbpwd $dbuser -e "select * from options;" > /dev/null 2>&1
	let result=$?
	let loop_number++
done

# Start GNU Social queue daemon
sudo bash $final_path/scripts/startdaemons.sh || echo "Queue daemon not started"
