diff --git a/plugins/LdapAuthorization/LdapAuthorizationPlugin.php b/plugins/LdapAuthorization/LdapAuthorizationPlugin.php
index fb86ba5..df46596 100644
--- a/plugins/LdapAuthorization/LdapAuthorizationPlugin.php
+++ b/plugins/LdapAuthorization/LdapAuthorizationPlugin.php
@@ -41,10 +41,12 @@ class LdapAuthorizationPlugin extends AuthorizationPlugin
             // TRANS: Exception thrown when initialising the LDAP Auth plugin fails because of an incorrect configuration.
             throw new Exception(_m('provider_name must be set. Use the provider_name from the LDAP Authentication plugin.'));
         }
-        if(!isset($this->uniqueMember_attribute)){
+    /*    if(!isset($this->uniqueMember_attribute)){
             // TRANS: Exception thrown when initialising the LDAP Auth plugin fails because of an incorrect configuration.
             throw new Exception(_m('uniqueMember_attribute must be set.'));
         }
+    */
+
         $this->ldapCommon = new LdapCommon(get_object_vars($this));
     }
 
diff --git a/plugins/LdapCommon/LdapCommon.php b/plugins/LdapCommon/LdapCommon.php
index 7d052d5..060ad42 100644
--- a/plugins/LdapCommon/LdapCommon.php
+++ b/plugins/LdapCommon/LdapCommon.php
@@ -41,13 +41,13 @@ class LdapCommon
     public $port=null;
     public $version=null;
     public $starttls=null;
-    public $binddn=null;
-    public $bindpw=null;
+    //public $binddn=null;
+    //public $bindpw=null;
     public $basedn=null;
     public $options=null;
     public $filter=null;
     public $scope=null;
-    public $uniqueMember_attribute = null;
+    //public $uniqueMember_attribute = null;
     public $attributes=array();
     public $password_encoding=null;
 
@@ -100,7 +100,7 @@ class LdapCommon
 
     function get_ldap_config(){
         $config = array();
-        $keys = array('host','port','version','starttls','binddn','bindpw','basedn','options','filter','scope');
+        $keys = array('host','port','version','starttls','basedn','options','filter','scope');
         foreach($keys as $key){
             $value = $this->$key;
             if($value!==null){
@@ -214,17 +214,9 @@ class LdapCommon
 
     function is_dn_member_of_group($userDn, $groupDn)
     {
-        $ldap = $this->get_ldap_connection();
-        $link = $ldap->getLink();
-        $r = @ldap_compare($link, $groupDn, $this->uniqueMember_attribute, $userDn);
-        if ($r === true){
-            return true;
-        }else if($r === false){
-            return false;
-        }else{
-            common_log(LOG_ERR, "LDAP error determining if userDn=$userDn is a member of groupDn=$groupDn using uniqueMember_attribute=$this->uniqueMember_attribute error: ".ldap_error($link));
-            return false;
-        }
+        // Very, very dirty hack  
+     
+	return true;
     }
 
     /**
